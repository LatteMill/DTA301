setwd("D:/FALL2022/DTA301/Lab01Description")
getwd()
# 1.	Import data in .csv file to requests data frame in R
requests <- read.csv("yearly_request.csv")
# 2.	Export the histogram of number of requests to jpeg file
requests_table <- read.table("yearly_sales.csv", header=TRUE, sep=",")
# 2.	Export the histogram of number of requests to jpeg file
requests_table <- read.table("yearly_request.csv", header=TRUE, sep=",")
requests_delim <- read.delim("yearly_request.csv", sep=",")
write.table(requests,"requests_modified.txt", sep="\t", row.names=FALSE)
# 2.	Export the histogram of number of requests to jpeg file
jpeg(file="D:/FALL2022/DTA301/sales_hist.jpeg") # create a new jpeg file
hist(sales$num_of_orders) # export histogram to jpeg
hist(requests$num_of_orders) # export histogram to jpeg
hist(sales) # export histogram to jpeg
hist(requests) # export histogram to jpeg
# 2.	Export the histogram of number of requests to jpeg file
jpeg(file="D:/FALL2022/DTA301/requests_hist.jpeg") # create a new jpeg file
hist(requests) # export histogram to jpeg
View(requests)
hist(requests$no_of_requests) # export histogram to jpeg
# 2.	Export the histogram of number of requests to jpeg file
jpeg(file="D:/FALL2022/DTA301/Lab01Description/requests_hist.jpeg") # create a new jpeg file
hist(requests$no_of_requests) # export histogram to jpeg
dev.off() # shut off the graphic device
head(sales)
head(requests)
summary(requests)
# plot num_of_orders vs. requests
plot(requests$no_of_requests,requests$req_total,
main="Number of Requests vs. total requests")
# perform a statistical analysis (fit a linear regression model)
results <- lm(requests$req_total ~ requests$no_of_requests)
results
summary(results)
# perform some diagnostics on the fitted model
# plot histogram of the residuals
hist(results$residuals, breaks = 800)
# add a column for the average requests per order
requests$per_request <- requests$req_total/requests$no_of_requests
# export data as tab delimited without the row names
write.table(requests,"requests_modified.txt", sep="\t", row.names=FALSE)
# export a histogram to a jpeg
jpeg(file="D:/FALL2022/DTA301/Lab01Description/requests_hist.jpeg") # create a new jpeg file
hist(requests$no_of_requests) # export histogram to jpeg
dev.off() # shut off the graphic device
# 4.	Extract the second, third, and fourth column of the requests data frame
requests[,2]
requests[,3]
requests[,4]
# 4.	Extract the second, third, and fourth column of the requests data frame
requests[2,3,4]
requests[,3,4]
requests[,2,3,4]
requests[,3,4]
# 4.	Extract the second, third, and fourth column of the requests data frame
requests[2,3,4]
# 5.	build an empty character vector of the same length as requests and group
# the customers according to the request amount
# build an empty character vector of the same length as requests
requests_group <- vector(mode="character",
length=length(requests$req_total))
requests_group[requests$req_totall<100] <- "small"
requests_group[requests$req_totall>=100 & requests$req_totall<500] <- "medium"
requests_group[requests$req_totall>=500] <- "big"
# 6.	Summary of requests
summary(requests)
View(results)
View(requests_table)
# B.  Write commands
# 1.	Create a vector v contain values from 1 to 50
v <- c(1:50)
# 2.	Calculate the total value of all elements in v
sum(c)
# 2.	Calculate the total value of all elements in v
sum(v)
# 7.	Calculate and show total of request value
sum(re)
# 7.	Calculate and show total of request value
sum(requests)
# 7.	Calculate and show total of request value
summary(requests$req_total)
#  3.	List all elements which has value greater than 10 and less than 40
v[v>10&v>40]
#  3.	List all elements which has value greater than 10 and less than 40
v[v>10&v<40]
w <- v*2
x <- rnorm(50)
y <- x + rnorm(60, mean=0, sd=0.6)
data <- as.data.frame(cbind(x, y))
summary(data)
library(ggplot2)
ggplot(data, aes(x=x, y=y)) +
geom_point(size=2) +
ggtitle("Scatterplot of X and Y") +
theme(axis.text=element_text(size=12),
axis.title = element_text(size=14),
plot.title = element_text(size=20, face="bold"))
library(ggplot2)
ggplot(data, aes(x=x, y=y)) +
geom_point(size=2) +
ggtitle("Scatterplot of X and Y") +
theme(axis.text=element_text(size=12),
axis.title = element_text(size=14),
plot.title = element_text(size=20, face="bold"))
x <- rnorm(60)
y <- x + rnorm(60, mean=0, sd=0.6)
data <- as.data.frame(cbind(x, y))
summary(data)
library(ggplot2)
ggplot(data, aes(x=x, y=y)) +
geom_point(size=2) +
ggtitle("Scatterplot of X and Y") +
theme(axis.text=element_text(size=12),
axis.title = element_text(size=14),
plot.title = element_text(size=20, face="bold"))
x <- rnorm(60)
y <- x + rnorm(60, mean=0, sd=0.6)
data <- as.data.frame(cbind(x, y))
summary(data)
library(ggplot2)
ggplot(data, aes(x=x, y=y)) +
geom_point(size=2) +
ggtitle("Scatterplot of X and Y") +
theme(axis.text=element_text(size=12),
axis.title = element_text(size=14),
plot.title = element_text(size=20, face="bold"))
x <- rnorm(60)
y <- x + rnorm(60, mean=0, sd=0.6)
data <- as.data.frame(cbind(x, y))
summary(data)
library(ggplot2)
ggplot(data, aes(x=x, y=y)) +
geom_point(size=2) +
ggtitle("Scatterplot of X and Y") +
theme(axis.text=element_text(size=12),
axis.title = element_text(size=14),
plot.title = element_text(size=20, face="bold"))
requests[, 2:4]
